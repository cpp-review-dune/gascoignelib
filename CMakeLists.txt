#### Set Standard options
SET(CMAKE_BUILD_TYPE "Release" CACHE STRING "Configuration type" )
SET(CMAKE_CXX_FLAGS_RELEASE "-O3" CACHE STRING "Configuration type" )
set(CMAKE_CXX_STANDARD 17)
PROJECT(GASCOIGNE CXX C)
#### CMAKE CONFIG
CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
cmake_policy(SET CMP0042 NEW)

LIST(APPEND CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cmake/)

OPTION(BUILD_SHARED_LIBS "Build shared libraries" ON)

OPTION(MATRIX_DOUBLE_PRECISION "Matrix in double precision" ON)
OPTION(WITH_UMFPACK "Build with support for UMFPACK" ON)
OPTION(WITH_UMFPACK_LONG "Long-integer indices in UMFPACK >4GB matrices" OFF)
OPTION(WITH_THREADS "Build with support for openmp" ON)

### Directory Settings

SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/../lib"  CACHE PATH "output path for libraries")

#
# The name of the library:
#
SET(GASCOIGNE_LIBRARY GascoigneStd)

#
# Include directories:
#
SET (GASCOIGNE_DIR ${CMAKE_CURRENT_SOURCE_DIR})
INCLUDE(CMakeLists_Includes.txt)

#
# Setup compiler flags and compile definitions:
#
SET(GASCOIGNE_CXX_FLAGS
  "-std=c++17 -pedantic -Wall -Wno-sign-compare -Wold-style-cast" CACHE STRING "Configuration flags"
  )

IF(MATRIX_DOUBLE_PRECISION)
  LIST(APPEND GASCOIGNE_DEFINITIONS -D __MATRIX_DOUBLE_PRECISION__)
ENDIF(MATRIX_DOUBLE_PRECISION)

IF(WITH_THREADS)
  SET(GASCOIGNE_CXX_FLAGS "${GASCOIGNE_CXX_FLAGS} -fopenmp")
ENDIF(WITH_THREADS)

#
# Search for metis:
#
FIND_PACKAGE(METIS REQUIRED)

LIST(APPEND GASCOIGNE_INCLUDE_DIRS ${METIS_INCLUDE_DIRS})
LIST(APPEND GASCOIGNE_LIBRARIES ${METIS_LIBRARIES})

#
# Search for UMFPACK:
#
IF(WITH_UMFPACK)
  FIND_PACKAGE(UMFPACK REQUIRED)

  LIST(APPEND GASCOIGNE_INCLUDE_DIRS ${UMFPACK_INCLUDE_DIRS})
  LIST(APPEND GASCOIGNE_LIBRARIES ${UMFPACK_LIBRARIES})
  SET(GASCOIGNE_LINKER_FLAGS "${GASCOIGNE_LINKER_FLAGS} ${UMFPACK_LINKER_FLAGS}")
  LIST(APPEND GASCOIGNE_DEFINITIONS -D __WITH_UMFPACK__)

  if (WITH_UMFPACK_LONG)
    LIST(APPEND GASCOIGNE_DEFINITIONS -D __WITH_UMFPACK_LONG__)
  ENDIF()
ENDIF()

#
# Search for blas:
#
FIND_PACKAGE(BLAS REQUIRED)

LIST(APPEND GASCOIGNE_LIBRARIES ${BLAS_LIBRARIES})
SET(GASCOIGNE_LINKER_FLAGS "${GASCOIGNE_LINKER_FLAGS} ${BLAS_LINKER_FLAGS}")

#
# Check whether tr1/unordered_map is available:
#
INCLUDE(CheckCXXSourceCompiles)

CHECK_CXX_SOURCE_COMPILES(
  "
  #include <tr1/unordered_map>
  int main()
  {
  std::tr1::unordered_map<int, int> foo;
  return 0;
  }
  "
  HAVE_TR1_UNORDERED_MAP
  )

IF(HAVE_TR1_UNORDERED_MAP)
  LIST(APPEND GASCOIGNE_DEFINITIONS -D __NEWER_THAN_GCC_4_2__)
ENDIF()

SEPARATE_ARGUMENTS(GASCOIGNE_CXX_FLAGS)
ADD_COMPILE_OPTIONS(${GASCOIGNE_CXX_FLAGS})
ADD_DEFINITIONS(${GASCOIGNE_DEFINITIONS})

SET(GASCOIGNE_LIBS "GascoigneStd${BUILD_ENDING}")

ADD_SUBDIRECTORY(src)
