Version 27.05.2004
==================
*becker:
1) loop hat "AddFunctional" statt "SetFunctionals"
2) SolverInterface::Residual() jetzt SolverInterface::Form()
3) neu Klasse "ProblemDescriptorBase"  -- keine virtuellen Fkt "Construc..." mehr


Version 23.04.2004
==================

* schmich:
1) Version aufgeraeumt
2) EnergyEstimator und EdgeInfos aufgeraeumt. Die Integrator-Funktion fuer den EnergyEstimator sind nun
nicht mehr im Galerkin-Integrator, sondern in einem eigenen EnergyEstimatorIntegrator (um der Verwechslungsgefahr
in der Namensgebung (z.B. "Residual" fuer den Residuenanteil) vorzubeugen. Ausserdem wurde die Notation
an die Standardschreibweise (Gross-Kleinschreibung) angepasst.


Version 19.04.2004
==================

* meidner
1) RhsNeumann verwendet die uebergebene Equation-Refenrenz nicht. Deshalb EQ aus 
Funktionsprototyp in Interface entfernt.


Version 27.02.2004
==================

* meidner:
1) Die Verwaltung der Global- und LocalData läuft jetzt über Maps.


Version 21.02.2004
==================

* roland:
1) gekruemmte raender sind nicht mehr in der bibliothek,
sondern werden lokal erzeugt, siehe Example/NavierStokes2D
2) diverses aufgeraeumt
3) nur noch eine bib: libGascoigneStd.lib
4) kein Starter mehr
5) "StdMultiLevelSolver::RegisterVector" merkt sich nur den Namen;
   zum nachtraeglichen Hinzufuegen von Vektoren gibt es
	"StdMultiLevelSolver::RegisterVectorAndMemory"
6) wer mir erklaert, warum die Fehler in Test1 nicht kleiner als 1e-6 sind,
kriegt ein Bier von mir!


Version 17.02.2004
==================

* roland:
1) Version in reverse order
2) dir test mit test1 (=Laplace2D)
3) test1 ist ein bsp. ohne paramfile (prophylaktisch)
   !?   GetMesh()->BasicInit() wird nicht mehr von BasicLoop aufgerifen, falls der pointer !=NULL.

   
Version 01.2004 (24.01.2004)
============================
* roland: class ParamFile introduced
* some changes in MeshInterface


Version 01.2004 (23.01.2004)
============================

* FunctionalManager deleted
  Nun ruft man aus dem main auf "loop.SetFunctionals(J);"
  hierbei ist J ein vector<const Functional*>
* Loops aufgeraeumt, nun ruft man "run(const ProblemDescriptorInterface*)" auf.


Version 01.2004 (07.01.2004)
============================

* braack: src/Solver/stdmultilevelsolver.cc
bug fixed (SolutionTransfer hanging nodes)

* meidner: src/Common/nvector.h, compvector.h
BinaryWrite BinaryRead rewritten and tested

* meidner: Examples/Control
updated


Version 12.2003
===============

* roland: src
Mesh* replaced by MeshInterface* 
MgTransferInterface new introduced
bug for hanging nodes reintroduced

* roland: CMakeLists.txt
redesigned
