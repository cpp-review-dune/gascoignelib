
namespace Gascoigne
{



template<int DIM>  void multiplexbound_init_F(Eigen::Matrix<double, DIM, DIM>& F, const FemFunction &U) { assert(0); }

template<>  void multiplexbound_init_F<2>(Eigen::Matrix<double, 2, 2>& F, const FemFunction &U)
{ F << 
    1.0 + U[0].x(), U[0].y(),
    U[1].x(), 1.0 + U[1].y(); }

template<>  void multiplexbound_init_F<3>(Eigen::Matrix<double, 3, 3>& F, const FemFunction &U)
{ F << 
    1.0+U[0].x(), U[0].y(), U[0].z(),  
    U[1].x(), 1.0+U[1].y() , U[1].z(), 
    U[2].x(), U[2].y(), 1.0+U[2].z(); }











template<int DIM>
void multiplexbound_init_test(Eigen::Matrix<double, DIM, 1>& phi, const TestFunction &N)
{ assert(0); }
template<>
void multiplexbound_init_test<2>(Eigen::Matrix<double,2,1>& phi, const TestFunction &N) { phi << N.x(), N.y(); }
template<>
void multiplexbound_init_test<3>(Eigen::Matrix<double,3,1>& phi, const TestFunction &N) { phi << N.x(), N.y(), N.z(); }

}

