//  -*- c++ -*-
#include  "newton.h"

/*----------------------------------------------------*/

template<class Operator, class Vector>
void newton(Operator& S, Vector& u, const Vector& f, Vector& r, Vector& w, NLInfo& info)
{
  info.reset();
  double rr = S.NewtonResidual(r,u,f);
  bool reached = info.check(0,rr,0.);
  S.NewtonOutput(info);
  for(int it=1; !reached; it++)
    {
      S.NewtonMatrixControl(u,info);
      S.GVzero(w);
      S.NewtonLinearSolve(w,r,u,info.GetLinearInfo());
      double rw = S.NewtonUpdate(rr,u,w,r,f,info);
      reached = info.check(it,rr,rw);
      S.NewtonOutput(info);
    }
}

/*----------------------------------------------------*/

template<class Operator, class Vector>
void newnewton(Operator& S, Vector& u, const Vector& f, Vector& r, Vector& w, NLInfo& info)
{
  info.reset();
  double rr = S.NewtonResidual(r,u,f);
  bool reached = info.check(0,rr,0.);
  S.NewtonOutput(info);
  for(int it=1; !reached; it++)
    {
      S.NewtonMatrixControl(u,info);
      w.zero();
      S.NewtonLinearSolve(w,r,u,info.GetLinearInfo());
      double rw = S.NewtonUpdate(rr,u,w,r,f,info);
      reached = info.check(it,rr,rw);
      S.NewtonOutput(info);
    }
}
